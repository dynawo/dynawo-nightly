# Copyright (c) 2015-2019, RTE (http://www.rte-france.com)
# See AUTHORS.txt
# All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of Dynawo, an hybrid C++/Modelica open source time domain
# simulation tool for power systems.
#
# Continous Integration setup for Dynawo.

language: cpp

# services:
#   - docker

notifications:
  email:
    recipients:
      - gautier.bureau@rte-france.com
      - florentine.rosiere@rte-france.com
    on_success: never
    on_failure: always

install:
  - source define_variables.sh
  - ./install_stage.sh

jobs:
  include:
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=NO DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: linux
    #   dist: trusty
    #   sudo: required
    #   DYNAWO_COMPILER: g++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=GCC DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - docker exec $dynawo_env $dynawo_om_env_local $dynawo_env_url dynawo_travis_container bash -c "$BUILD_OMC_COMMAND"
    - stage: build
      os: osx
      osx_image: xcode10.3
      DYNAWO_COMPILER: clang++
      env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
      script:
        - ./build_stage.sh
        - dynawo/util/envDynawo.sh nrt
        # - dynawo/util/envDynawo.sh jobs dynawo/nrt/data/IEEE14/IEEE14_BasicTestCases/IEEE14_LoadVariation/IEEE14.jobs
        # - travis_wait dynawo/util/envDynawo.sh jobs-valgrind dynawo/nrt/data/IEEE14/IEEE14_BasicTestCases/IEEE14_LoadVariation/IEEE14.jobs
    # - stage: build
    #   os: osx
    #   osx_image: xcode10.3
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=SHARED
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: osx
    #   osx_image: xcode10.3
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Release DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
    # - stage: build
    #   os: osx
    #   osx_image: xcode10.3
    #   DYNAWO_COMPILER: clang++
    #   env: DYNAWO_BUILD_TYPE=Debug DYNAWO_CXX11_ENABLED=YES DYNAWO_COMPILER=CLANG DYNAWO_LIBRARY_TYPE=STATIC
    #   script:
    #     - ./build_stage.sh
